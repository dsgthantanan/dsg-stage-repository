apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    workload.user.cattle.io/workloadselector: deployment-dsg-graphql-dsg-graphql-dsgrfb
  name: dsg-graphql-dsgrfb
  namespace: dsg-graphql
spec:
  replicas: 1
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-dsg-graphql-dsg-graphql-dsgrfb
  template:
    metadata:
      labels:
        workload.user.cattle.io/workloadselector: deployment-dsg-graphql-dsg-graphql-dsgrfb
    spec:
      containers:
      - env:
        - name: JWT_SECRET
          value: ABCD1234
        - name: MONGO_URL
          value: mongodb+srv://stage-dsguser:pz8fR7swzFNd3dka@stage-dsg-42wuh.mongodb.net/DSG?retryWrites=true&w=majority
        image: 589962364545.dkr.ecr.ap-southeast-1.amazonaws.com/dsg-graphql-dsgrfb:1.0.0
        imagePullPolicy: Always
        name: dsg-graphql-dsgrfb
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: aws-ecr-secrets
      restartPolicy: Always
      schedulerName: default-scheduler

---

apiVersion: v1
kind: Service
metadata:
  annotations:
    field.cattle.io/targetWorkloadIds: '["deployment:dsg-graphql:dsg-graphql-dsgrfb"]'
  name: dsg-graphql-dsgrfb-wl-svc
  namespace: dsg-graphql
spec:
  ports:
  - port: 4000
    protocol: TCP
    targetPort: 4000
  selector:
    workload.user.cattle.io/workloadselector: deployment-dsg-graphql-dsg-graphql-dsgrfb
  type: ClusterIP
  
---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: dsg-public-lb-1
    cert-manager.io/cluster-issuer: aws-issuer
  name: dsg-graphql-dsgrfb-ingress
  namespace: dsg-graphql
spec:
  rules:
  - host: dev-rfb.dollarsmartglobal.com
    http:
      paths:
      - backend:
          serviceName: dsg-graphql-dsgrfb-wl-svc
          servicePort: 4000
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - dev-rfb.dollarsmartglobal.com
    secretName: dsg-rfb-tls
